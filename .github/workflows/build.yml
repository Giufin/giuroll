name: build
on: workflow_dispatch

env:
  CARGO_BUILD_TARGET: i686-win7-windows-msvc
  PROFILE: release
  RUSTFLAGS: -Ctarget-feature=+crt-static
  CARGO_PROFILE_RELEASE_SPLIT_DEBUGINFO: packed
  CARGO_PROFILE_RELEASE_DEBUG: true
  CARGO_PROFILE_RELEASE_STRIP: none
  SOURCE_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  build:
    name: build
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly-2024-04-15
          components: rust-src
      - run: |
          cargo build --profile ${{env.PROFILE}} -Z build-std
      - run: |
          cd injector
          cargo build --profile ${{env.PROFILE}} -Z build-std=std,panic_abort
          cd ..
      - run: |
          cp giuroll.ini target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/
          cp LICENSE target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/LICENSE.txt
          cp injector/target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/injector.exe target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/
          echo [InternetShortcut] > source-code-and-the-build.url
          # https://stackoverflow.com/a/70566764
          echo URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} >> source-code-and-the-build.url
          cp source-code-and-the-build.url target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/
          $verstr = cargo run --example print-version --profile ${{env.PROFILE}} -Z build-std
          $commit_id = git rev-parse --short HEAD
          echo VERSION=${verstr}_${commit_id} >> $env:GITHUB_ENV
      - uses: actions/upload-artifact@v4
        with:
          name: giuroll-${{ env.VERSION }}
          path: |
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/giuroll.dll
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/giuroll.ini
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/LICENSE.txt
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/injector.exe
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/source-code-and-the-build.url
      - uses: actions/upload-artifact@v4
        with:
          name: giuroll-pdb-${{ env.VERSION }}
          path: |
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/giuroll.pdb
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/LICENSE.txt
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/source-code-and-the-build.url
      - run: |
          cargo build --profile ${{env.PROFILE}} -Z build-std --features fillfree
      - uses: actions/upload-artifact@v4
        with:
          name: giuroll-fillfree-${{ env.VERSION }}
          path: |
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/giuroll.dll
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/giuroll.ini
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/LICENSE.txt
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/injector.exe
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/source-code-and-the-build.url
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/giuroll.pdb
