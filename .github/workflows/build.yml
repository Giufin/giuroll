name: build
on: workflow_dispatch

env:
  CARGO_BUILD_TARGET: i686-win7-windows-msvc
  PROFILE: release
  RUSTFLAGS: -Ctarget-feature=+crt-static
  CARGO_PROFILE_RELEASE_SPLIT_DEBUGINFO: packed
  CARGO_PROFILE_RELEASE_DEBUG: true
  CARGO_PROFILE_RELEASE_STRIP: none
  SOURCE_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  PACK_DIR: _pack
  PACK_NAME: giuroll

jobs:
  build:
    name: build
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly-2024-04-15
          components: rust-src
      - run: |
          cargo build --profile ${{env.PROFILE}} -Z build-std
      - run: |
          cd injector
          cargo build --profile ${{env.PROFILE}} -Z build-std=std,panic_abort
          cd ..
      - run: |
          mkdir ${{ env.PACK_DIR }}/${{ env.PACK_NAME }}
          cp giuroll.ini ${{ env.PACK_DIR }}/${{ env.PACK_NAME }}/
          cp LICENSE ${{ env.PACK_DIR }}/${{ env.PACK_NAME }}/LICENSE.txt
          cp injector/target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/injector.exe ${{ env.PACK_DIR }}/${{ env.PACK_NAME }}/
          cp target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/giuroll.dll ${{ env.PACK_DIR }}/${{ env.PACK_NAME }}/
          echo [InternetShortcut] > source-code-and-the-build.url
          # https://stackoverflow.com/a/70566764
          echo URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} >> source-code-and-the-build.url
          cp source-code-and-the-build.url ${{ env.PACK_DIR }}/${{ env.PACK_NAME }}/
          cargo run --example print-mod-json --profile ${{env.PROFILE}} -Z build-std > ${{ env.PACK_DIR }}/${{ env.PACK_NAME }}/mod.json
          $verstr = cargo run --example print-version --profile ${{env.PROFILE}} -Z build-std
          $commit_id = git rev-parse --short HEAD
          echo VERSION=${verstr}_${commit_id} >> $env:GITHUB_ENV
          echo "A workround to avoid the zip pack being flattened" > ${{ env.PACK_DIR }}/.a-workaround-to-avoid-being-flattened
      - uses: actions/upload-artifact@v4
        with:
          name: giuroll-${{ env.VERSION }}
          path: |
            ${{ env.PACK_DIR }}/${{ env.PACK_NAME }}
            ${{ env.PACK_DIR }}/.a-workaround-to-avoid-being-flattened
            !${{ env.PACK_DIR }}/.a-workaround-to-avoid-being-flattened
      - uses: actions/upload-artifact@v4
        with:
          name: giuroll-pdb-${{ env.VERSION }}
          path: |
            target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/giuroll.pdb
            LICENSE
            source-code-and-the-build.url
      - run: |
          cargo build --profile ${{env.PROFILE}} -Z build-std --features fillfree
          cp target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/giuroll.dll ${{ env.PACK_DIR }}/${{ env.PACK_NAME }}/
          cp target/${{ env.CARGO_BUILD_TARGET }}/${{ env.PROFILE }}/giuroll.pdb ${{ env.PACK_DIR }}/${{ env.PACK_NAME }}/
      - uses: actions/upload-artifact@v4
        with:
          name: giuroll-fillfree-${{ env.VERSION }}
          path: |
            ${{ env.PACK_DIR }}/${{ env.PACK_NAME }}
            ${{ env.PACK_DIR }}/.a-workaround-to-avoid-being-flattened
            !${{ env.PACK_DIR }}/.a-workaround-to-avoid-being-flattened
